CREATE DATABASE t01_library;

CREATE TABLE public.author(
	id SERIAL PRIMARY KEY,
	last_name VARCHAR(255),
	first_name VARCHAR(255)
);

CREATE TABLE public.publishing_house(
	id SERIAL PRIMARY KEY,
	name VARCHAR(255),
	city VARCHAR(255)
);

create table public.book(
	id SERIAL PRIMARY KEY,
	title VARCHAR(255),
	author_id INTEGER REFERENCES public.author(id),
	publishing_house_id INTEGER REFERENCES public.publishing_house(id),
	version VARCHAR(255),
	publishing_year INTEGER,
	circulation INTEGER
);

create type gender_type as enum('male', 'female');

create table public.reader(
	 reader_card_number INTEGER PRIMARY KEY,
	 last_name VARCHAR(255),
	 first_name VARCHAR(255),
	 birth_date DATE,
	 gender gender_type,
	 registration_date DATE
);

create type book_state as enum('excellent', 'good', 'satisfactory', 'dilapidated', 'lost');

create type book_status as enum('in stock', 'issued', 'booked');

create table public.location(
	id SERIAL PRIMARY KEY,
	corpus VARCHAR(50),
	hall VARCHAR(50),
	shelf VARCHAR(50),
	rack VARCHAR(50)
);

create table public.book_instance(
	inventory_number SERIAL PRIMARY KEY,
	book_id INTEGER REFERENCES public.book(id),
	state book_state,
	status book_status,
	location_id INTEGER REFERENCES public.location(id)
);

create table public.issuance(
	reader_card_number INTEGER REFERENCES public.reader(reader_card_number),
	inventory_number INTEGER REFERENCES public.book_instance(inventory_number),
	issue_datetime TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NOW(),
	expected_return_date DATE,
	actual_return_date DATE,
	PRIMARY KEY(reader_card_number, inventory_number)
);

create table public.booking(
	booking_number SERIAL PRIMARY KEY,
	reader_card_number INTEGER REFERENCES public.reader(reader_card_number),
	book_id INTEGER REFERENCES public.book(id),
	minimum_state book_state,
	booking_datetime TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NOW()
);



